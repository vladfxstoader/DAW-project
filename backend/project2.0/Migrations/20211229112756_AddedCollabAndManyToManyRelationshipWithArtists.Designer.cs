// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using project2._0.Data;

namespace project2._0.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20211229112756_AddedCollabAndManyToManyRelationshipWithArtists")]
    partial class AddedCollabAndManyToManyRelationshipWithArtists
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("project2._0.Models.Entities.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfSongs")
                        .HasColumnType("int");

                    b.Property<int>("YearOfRelease")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("project2._0.Models.Entities.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearOfBirth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("project2._0.Models.Entities.Collab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Duration")
                        .HasColumnType("real");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Collabs");
                });

            modelBuilder.Entity("project2._0.Models.Entities.CollabArtist", b =>
                {
                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("CollabId")
                        .HasColumnType("int");

                    b.HasKey("ArtistId", "CollabId");

                    b.HasIndex("CollabId");

                    b.ToTable("CollabArtists");
                });

            modelBuilder.Entity("project2._0.Models.Entities.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId")
                        .IsUnique();

                    b.ToTable("Manager");
                });

            modelBuilder.Entity("project2._0.Models.Entities.Album", b =>
                {
                    b.HasOne("project2._0.Models.Entities.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("project2._0.Models.Entities.CollabArtist", b =>
                {
                    b.HasOne("project2._0.Models.Entities.Artist", "Artist")
                        .WithMany("CollabArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project2._0.Models.Entities.Collab", "Collab")
                        .WithMany("CollabArtists")
                        .HasForeignKey("CollabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Collab");
                });

            modelBuilder.Entity("project2._0.Models.Entities.Manager", b =>
                {
                    b.HasOne("project2._0.Models.Entities.Artist", "Artist")
                        .WithOne("Manager")
                        .HasForeignKey("project2._0.Models.Entities.Manager", "ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("project2._0.Models.Entities.Artist", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("CollabArtists");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("project2._0.Models.Entities.Collab", b =>
                {
                    b.Navigation("CollabArtists");
                });
#pragma warning restore 612, 618
        }
    }
}
